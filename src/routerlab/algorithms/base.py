# Routing algorithms - base contract
from typing import Protocol, Any, Dict, Optional

class RoutingAlgorithm(Protocol):
    name: str
    def on_init(self, me: str, neighbors: list[str]) -> None: ...
    def on_hello(self, neighbor: str, metric: float = 1.0) -> None: ...
    def on_info(self, from_node: str, payload: Dict[str, Any]) -> None: ...
    def recompute(self) -> None: ...
    def next_hop(self, dest: str) -> Optional[str]: ...
    def build_info(self) -> Dict[str, Any]: ...
